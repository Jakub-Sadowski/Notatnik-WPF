<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Notatnik">
    <Style x:Key="AnimatedButton">
        <Style.Setters>
            <Setter Property="Button.RenderTransform">
                <Setter.Value>
                    <ScaleTransform />
                </Setter.Value>
            </Setter>
            <Setter Property="Button.RenderTransformOrigin" Value="0.5,0.5" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.2" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.2" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1" Duration="0:0:0.5">
                                <DoubleAnimation.EasingFunction>
                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <EventTrigger RoutedEvent="Button.Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="NotatkaTemplate">
        <Border Margin="5" Background="{Binding Path=Wyroznienie, Converter={StaticResource BoolToBrushConverterBackground}}" CornerRadius="2">
            <Border Margin="5" Padding="2" BorderThickness="1" BorderBrush="{Binding Path=Wyroznienie, Converter={StaticResource BoolToBrushConverterForeground}}" CornerRadius="2">
                <StackPanel Margin="5">
                    <TextBlock Text="{Binding Path=Tytul, Converter={StaticResource NoTitleConverter}}" FontWeight="Bold" Margin="2" Foreground="{Binding Path=Wyroznienie, Converter={StaticResource BoolToBrushConverterForeground}}" />
                    <TextBlock Text="{Binding Path=Autor, Converter={StaticResource NoAuthorConverter}}" Margin="2" Foreground="{Binding Path=Wyroznienie, Converter={StaticResource BoolToBrushConverterForeground}}">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="False">
                                        <Setter Property="TextBlock.Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Border>
            <Border.Style>
                <Style>
                    <Style.Setters>
                        <Setter Property="Border.RenderTransform">
                            <Setter.Value>
                                <TranslateTransform />
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Border.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" From="100" To="1" Duration="0:0:1">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseInOut" Oscillations="1" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="SzczegolyTemplate">
        <Grid Margin="5" DataContext="{Binding ElementName=lbxData, Path=SelectedItem}" Visibility="{Binding ElementName=lbxData, Path=SelectedItem, Converter={StaticResource SelectionToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBlock Margin="2" TextAlignment="Right" Foreground="#FFDBDEE3">Data utworzenia</TextBlock>
            <TextBlock Margin="2" TextAlignment="Right" Grid.Row="1" Foreground="#FFDBDEE3">Data ostatniej modyfikacji</TextBlock>
            <TextBlock Margin="2" TextAlignment="Right" Grid.Row="2" Foreground="#FFDBDEE3">Kategoria</TextBlock>
            <GridSplitter Margin="5" Grid.Column="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="#FFDBDEE3" />
            <TextBlock Margin="2" FontWeight="Bold" Grid.Column="2" Text="{Binding Path=DataUtworzenia}" Foreground="#FFDBDEE3" />
            <TextBlock Margin="2" FontWeight="Bold" Grid.Row="1" Grid.Column="2" Text="{Binding Path=DataModyfikacji}" Foreground="#FFDBDEE3" />
            <TextBlock Margin="2" FontWeight="Bold" Grid.Row="2" Grid.Column="2" Text="{Binding Path=Kategoria}" Foreground="#FFDBDEE3" />
        </Grid>
    </DataTemplate>
    <Style x:Key="ItemStyle" TargetType="ListBoxItem">
        <Style.Setters>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TranslateTransform />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Ramka" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Ramka" Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <DataTemplate x:Key="GroupTemplate">
        <Border Padding="5" Background="{Binding Path=Items[0].Kategoria, Converter={StaticResource CathegoryToBrushConverter}}">
            <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" Foreground="White" />
        </Border>
    </DataTemplate>
    <Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
            <Setter Property="ToolBarTray.IsLocked" Value="True" />
        </Style.Setters>
    </Style>
    <Style x:Key="ToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
        </Style.Setters>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Style.Setters>
            <Setter Property="Background" Value="#FF6f7C91" />
            <Setter Property="Foreground" Value="#FFDBDEE3" />
        </Style.Setters>
    </Style>
    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
            <Setter Property="BorderThickness" Value="0" />
        </Style.Setters>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="3" />
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Style.Setters>
            <Setter Property="BorderBrush" Value="#FFDBDEE3" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="5" />
        </Style.Setters>
    </Style>
    <Style x:Key="RichTextBoxStyle" TargetType="{x:Type RichTextBox}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
        </Style.Setters>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
        </Style.Setters>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
        </Style.Setters>
    </Style>
    <Style x:Key="GroupBoxStyle" TargetType="{x:Type GroupBox}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
            <Setter Property="BorderThickness" Value="0" />
        </Style.Setters>
    </Style>
    <Style x:Key="CheckBoxBorderStyle" TargetType="{x:Type Border}">
        <Style.Setters>
            <Setter Property="CornerRadius" Value="3" />
            <Setter Property="Background" Value="#FFDBDEE3" />
            <Setter Property="Padding" Value="5" />
        </Style.Setters>
    </Style>
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="#FF6f7C91" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style.Setters>
    </Style>
    <Style x:Key="FlowDocumentBorderStyle" TargetType="{x:Type Border}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDBDEE3" />
            <Setter Property="CornerRadius" Value="3" />
        </Style.Setters>
    </Style>
</ResourceDictionary>